op0: SchedulerNode(ComputedBuffer)
op0.writes = [MemoryDep('buf0', c0, {c0: 15799})]
op0.unmet_dependencies = []
op0.met_dependencies = [MemoryDep('arg0_1', c0, {c0: 15799})]
op0.outputs = [
    buf0: ComputedBuffer
    buf0.layout = FixedLayout('cuda:0', torch.float32, size=[15799], stride=[1])
    buf0.users = [NodeUser(node=ExternKernelSchedulerNode(name='op1'), can_inplace=False, is_weak=False)]
]
op0.group.device = cuda:0
op0.group.iteration = (15799, 1)
op0.sizes = ([15799], [])
arg0_1_layout = FixedLayout('cuda:0', torch.float32, size=[15799], stride=[1])
buf0_layout = FixedLayout('cuda:0', torch.float32, size=[15799], stride=[1])
class op0_loop_body:
    var_ranges = {p0: 15799}
    index0 = p0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('arg0_1', get_index)
        neg = ops.neg(load)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf0', get_index_1, neg, None)
        return store


op1: ExternKernelSchedulerNode(IndexPutFallback)
op1.writes = [StarDep(name='buf1', mode=None)]
op1.unmet_dependencies = [StarDep(name='buf0', mode=None)]
op1.met_dependencies = [StarDep(name='arg1_1', mode=None), StarDep(name='arg2_1', mode=None)]
op1.outputs = [
    buf1: IndexPutFallback
    buf1.layout = NoneLayout(device=device(type='cuda', index=0), size=[0], stride=[0])
    buf1.mutations = ['arg1_1']
    buf1.users = [NodeUser(node=OUTPUT, can_inplace=False, is_weak=False)]
]
op1.node.kernel = aten.index_put_


